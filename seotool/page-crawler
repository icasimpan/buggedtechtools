###################################################################################################
#   Copyright 2009 Ismael Angelo A. Casimpan Jr.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
###################################################################################################

## BUGS: 
##   1. spaces in the .conf file will still lead into additional processing, though it's harmless.

#!/bin/bash

## Enable for debugging...
#set -v
#set -x

TR_BIN=/usr/bin/tr
GREP_BIN=/usr/bin/grep
AWK_BIN=/usr/bin/awk
MKDIR_BIN=/bin/mkdir
WC_BIN=/usr/bin/wc
PERL_BIN=/usr/bin/perl
CURL_BIN=/usr/bin/curl

### TODO: Add checking for used programs above to alert user that some
###       binary could be installed in another location and need to be changed.

GADIR=$1
BASE_DIR=./
CONF=$BASE_DIR/conf/`echo $GADIR|${TR_BIN} A-Z a-z`.conf
REPORT_DIR=$BASE_DIR/REPORTS/$GADIR

ALL_URL=(`${GREP_BIN} -v ^# $CONF | ${AWK_BIN} -F: '{print $1}'`)
ALL_LABEL=(`${GREP_BIN} -v ^# $CONF |  ${AWK_BIN} -F: '{print $2}'`)
ALL_RAW_REPORT=(`${GREP_BIN} -v ^# $CONF | ${AWK_BIN} -F: '{print $3}' $CONF`)

## Check the reports dir
if [ ! -d $BASE_DIR/REPORTS ]; then
   echo "[FYI] - Recreating $BASE_DIR/REPORTS"
   ${MKDIR_BIN} $BASE_DIR/REPORTS
   
   if [ ! -d $BASE_DIR/REPORTS/SUMMARY ]; then
       echo "[FYI] - Recreating $BASE_DIR/REPORTS/SUMMARY"
       ${MKDIR_BIN} $BASE_DIR/REPORTS/SUMMARY
   fi
fi

if [ ! -d $REPORT_DIR ]; then
   echo "[FYI] - Recreating $REPORT_DIR..."
   ${MKDIR_BIN} $REPORT_DIR
fi  

LEN=`${WC_BIN} -l $CONF|${AWK_BIN} '{print $1}'`
##
## NOTE: `${PERL_BIN} -le "print for 0 .. $LEN"` could actually be replaced 
##       by `seq 0 $LEN` but the 'seq' binary is not installed by default 
##       in MacOSX
##
for n in `${PERL_BIN} -le "print for 0 .. $LEN"`; do
  ## Prepend 0 as hack to file order processing by process_raw_report
  if [ $n -lt 10 ]; then
      auto_prep_zero_when_needed='0'
  else
      auto_prep_zero_when_needed=''
  fi
  echo "[NOTE] Getting ${ALL_LABEL[$n]} page ..."
  ### NOTE: If the pages reside on an authenticated site, use the one with password 
  ## curl --basic --user username:"my password" ${ALL_URL[$n]} > $REPORT_DIR/${auto_prep_zero_when_needed}${n}_${GADIR}-${ALL_RAW_REPORT[$n]}
  ${CURL_BIN} ${ALL_URL[$n]} > $REPORT_DIR/${auto_prep_zero_when_needed}${n}_${GADIR}-${ALL_RAW_REPORT[$n]}
done

echo "[NOTE] Generating report summary page..."
./process_raw_report $GADIR
